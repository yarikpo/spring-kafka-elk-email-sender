version: "3.9"
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - service
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://192.168.0.10:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - service
    healthcheck:
      test: ["CMD-SHELL", "echo OK"]
      interval: 30s
      timeout: 10s
      retries: 10
    depends_on:
      - zookeeper
  elasticsearch:
    image: elasticsearch:8.6.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
    volumes:
      - ./data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - service
  kibana:
    image: kibana:8.6.1
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - service
  java:
    build: .
    container_name: appjava
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      spring.elasticsearch.rest:uris: "http://localhost:9200"
    networks:
      - service
    depends_on:
      kafka:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
networks:
  service:
    name: service-network
    driver: bridge